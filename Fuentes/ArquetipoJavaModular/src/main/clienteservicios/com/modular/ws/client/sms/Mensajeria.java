package com.modular.ws.client.sms;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4.redhat-1
 * 2017-10-25T10:42:28.276-03:00
 * Generated source version: 3.1.4.redhat-1
 * 
 */
@WebServiceClient(name = "Mensajeria", 
                  wsdlLocation = "file:/C:/Users/nojeda/workspace/ClientGenerator/WebContent/wsdl/Mensajeria.wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class Mensajeria extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "Mensajeria");
    public final static QName MensajeriaHttpPost = new QName("http://tempuri.org/", "MensajeriaHttpPost");
    public final static QName MensajeriaSoap12 = new QName("http://tempuri.org/", "MensajeriaSoap12");
    public final static QName MensajeriaSoap = new QName("http://tempuri.org/", "MensajeriaSoap");
    public final static QName MensajeriaHttpGet = new QName("http://tempuri.org/", "MensajeriaHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/nojeda/workspace/ClientGenerator/WebContent/wsdl/Mensajeria.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Mensajeria.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/nojeda/workspace/ClientGenerator/WebContent/wsdl/Mensajeria.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Mensajeria(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Mensajeria(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Mensajeria() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public Mensajeria(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Mensajeria(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Mensajeria(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns MensajeriaHttpPost
     */
    @WebEndpoint(name = "MensajeriaHttpPost")
    public MensajeriaHttpPost getMensajeriaHttpPost() {
        return super.getPort(MensajeriaHttpPost, MensajeriaHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MensajeriaHttpPost
     */
    @WebEndpoint(name = "MensajeriaHttpPost")
    public MensajeriaHttpPost getMensajeriaHttpPost(WebServiceFeature... features) {
        return super.getPort(MensajeriaHttpPost, MensajeriaHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns MensajeriaSoap
     */
    @WebEndpoint(name = "MensajeriaSoap12")
    public MensajeriaSoap getMensajeriaSoap12() {
        return super.getPort(MensajeriaSoap12, MensajeriaSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MensajeriaSoap
     */
    @WebEndpoint(name = "MensajeriaSoap12")
    public MensajeriaSoap getMensajeriaSoap12(WebServiceFeature... features) {
        return super.getPort(MensajeriaSoap12, MensajeriaSoap.class, features);
    }


    /**
     *
     * @return
     *     returns MensajeriaSoap
     */
    @WebEndpoint(name = "MensajeriaSoap")
    public MensajeriaSoap getMensajeriaSoap() {
        return super.getPort(MensajeriaSoap, MensajeriaSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MensajeriaSoap
     */
    @WebEndpoint(name = "MensajeriaSoap")
    public MensajeriaSoap getMensajeriaSoap(WebServiceFeature... features) {
        return super.getPort(MensajeriaSoap, MensajeriaSoap.class, features);
    }


    /**
     *
     * @return
     *     returns MensajeriaHttpGet
     */
    @WebEndpoint(name = "MensajeriaHttpGet")
    public MensajeriaHttpGet getMensajeriaHttpGet() {
        return super.getPort(MensajeriaHttpGet, MensajeriaHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MensajeriaHttpGet
     */
    @WebEndpoint(name = "MensajeriaHttpGet")
    public MensajeriaHttpGet getMensajeriaHttpGet(WebServiceFeature... features) {
        return super.getPort(MensajeriaHttpGet, MensajeriaHttpGet.class, features);
    }

}
